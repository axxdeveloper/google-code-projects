/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

package canvas.view.filechooser;

import canvas.view.helper.ImageHelper;
import java.awt.BorderLayout;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author Isaac
 */
public class ImageFileChangedHandler extends javax.swing.JPanel implements PropertyChangeListener {
    
    /** Creates new form ImageSelectionChangeHandler */
    public ImageFileChangedHandler() {
        initComponents();
    }
    
    public void propertyChange(PropertyChangeEvent evt) {
        if ( evt.getPropertyName().equals(JFileChooser.SELECTED_FILE_CHANGED_PROPERTY) ) {
            File file = (File) evt.getNewValue();
            if ( file != null && ImageHelper.isAcceptedImageFile(file) ) {
                BufferedImage bimg = ImageHelper.readImage(file);
                if ( bimg != null ) {
                    jPanelMicrocosm.removeAll();
                    jPanelMicrocosm.add( new ImageFileMicrocosm(bimg, 120, 120), BorderLayout.CENTER );
                    jLabelImageInfo.setText( bimg.getWidth() + " x " + bimg.getHeight() );
                } else {
                    jPanelMicrocosm.removeAll();
                    jLabelImageInfo.setText( "" );
                }
            } else {
                jPanelMicrocosm.removeAll();
                jLabelImageInfo.setText( "" );
            }
        }
        revalidate();
        repaint();
        getParent().validate();
        getParent().repaint();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMicrocosm = new javax.swing.JPanel();
        jPanelImageInfo = new javax.swing.JPanel();
        jLabelImageInfo = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(150, 10));
        setLayout(new java.awt.BorderLayout());
        add(jPanelMicrocosm, java.awt.BorderLayout.CENTER);

        jLabelImageInfo.setText("");
        jPanelImageInfo.add(jLabelImageInfo);

        add(jPanelImageInfo, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImageInfo;
    private javax.swing.JPanel jPanelImageInfo;
    private javax.swing.JPanel jPanelMicrocosm;
    // End of variables declaration//GEN-END:variables
    
}
